[{"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/index.js":"1","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/App.js":"2","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/reportWebVitals.js":"3","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/useData.js":"4","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/Map/Map.js":"5","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/SideBar.js":"6","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/utils.js":"7","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/SusceptibilityAlert.js":"8","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/InfoTable.js":"9"},{"size":646,"mtime":1610123856884,"results":"10","hashOfConfig":"11"},{"size":837,"mtime":1610123856884,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610123856884,"results":"13","hashOfConfig":"11"},{"size":659,"mtime":1610124972871,"results":"14","hashOfConfig":"11"},{"size":2694,"mtime":1610125413088,"results":"15","hashOfConfig":"11"},{"size":2135,"mtime":1610127505596,"results":"16","hashOfConfig":"11"},{"size":636,"mtime":1610124994801,"results":"17","hashOfConfig":"11"},{"size":473,"mtime":1610128502370,"results":"18","hashOfConfig":"11"},{"size":10355,"mtime":1610126804583,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"a7b59r",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/index.js",[],["42","43"],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/App.js",["44"],"import {useEffect, useState} from 'react'\nimport {Map} from \"./Components/Map/Map\"\nimport {SideBar} from \"./Components/SideBar/SideBar\";\nimport {useData} from './useData'\nimport './App.scss';\n\nfunction App() {\n  \n  const data = useData();\n  const [selVillage, setSelVillage] = useState(null);\n  const [location,setLocation] = useState(null);\n\n\n  if(!data){\n    return <div className=\"loading\"><i class=\"fas fa-cog fa-spin fa-10x\"></i></div>\n\n  }\n\n\n  return (\n    <div className=\"app\">\n      <div id=\"app__left\">\n      <Map data={data} setSelVillage={setSelVillage} location={location} setLocation={setLocation}/>\n      </div>\n      <div id=\"app__right\">\n        <SideBar data={data} selVillage={selVillage} setSelVillage={setSelVillage} location={location} setLocation={setLocation}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/reportWebVitals.js",[],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/useData.js",[],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/Map/Map.js",["45","46","47"],"import React,{useState} from 'react';\nimport ReactMapGL, {Marker, Popup, ScaleControl,NavigationControl, BaseControl} from 'react-map-gl'\nimport {ColoredLine} from \"../../utils\"\nexport const Map = ({data, setSelVillage,location,setLocation}) =>{\n    const [viewport,setViewport] = useState({\n        width: \"100%\",\n        height: \"100vh\",\n        latitude: 30.850,\n        longitude: 78.2996,\n        zoom: 11\n    })\n\n    const setLocationIcon = susceptibility =>{\n      if(susceptibility === \"high\")\n        return <i class=\"fas fa-map-pin m-1 red-text fa-lg\"></i>\n      else if(susceptibility === \"low\")\n        return <i class=\"fas fa-map-pin m-1 green-text fa-lg\"></i>\n      else\n        return <i class=\"fas fa-map-pin m-1 yellow-text fa-lg\"></i>\n    } \n\n    return   (<div id=\"map\">\n    <ReactMapGL {...viewport} \n    mapStyle=\"mapbox://styles/animeshn07/ckij1x4eg0sxf19pir65fv2p3\"\n    mapboxApiAccessToken=\n    \"pk.eyJ1IjoiYW5pbWVzaG4wNyIsImEiOiJja2lqMTE1YnUwbXlnMnJueHd1a2NpZnlnIn0.XNfx80gfeZ4XJZiBqUePVQ\"\n    onViewportChange={ viewport =>{setViewport(viewport)}}>\n      {data.map(d=>{\n        return <Marker\n                  key={d.Lat+d.Long+d.Vill}\n                  latitude={d.Lat}\n                  longitude={d.Long}\n                  >\n                <div onClick={e =>{\n                    e.preventDefault();\n                    setLocation(d);\n                    setSelVillage(d.Loc)\n                  }}>\n                  {setLocationIcon(d.Susceptibility)}\n\n                </div>\n                \n\n                </Marker>\n  })\n  \n  \n  }\n\n{location ? (\n    <Popup latitude={location.Lat} longitude={location.Long}\n            onClose={()=>{setLocation(null)}}\n    >\n       <div style={{display:'flex',flexDirection:\"column\"}}>\n         <h4 class=\"text-center\">{location.Vill}</h4>\n         <ColoredLine/>\n         <div style={{display:\"flex\",gap:\"10px\"}}>\n          <span><small><b>Latitude: </b>{(location.Lat).toFixed(4)}</small></span>\n          <span><small><b>Longitude: </b>{(location.Long).toFixed(4)}</small></span>\n         </div>\n         </div> \n    </Popup>\n  ):null}\n  <div className=\"navigation\" style={{display:'flex',margin:\"10px\"}}>\n  {/* <NavigationControl/> */}\n  <div style={{backgroundColor:\"rgb(0, 0, 0,.3)\",color:\"white\",padding:\"10px\",display:\"flex\",flexDirection:\"column\",gap:\"10px\",borderRadius:\"20px\"}}>\n  <h6><b>Susceptibility</b></h6><ColoredLine color=\"white\" />\n    <span><i class=\"fas fa-map-pin m-1 red-text fa-lg\" ></i>High</span>\n    <span><i class=\"fas fa-map-pin m-1 yellow-text fa-lg\"></i>Moderate</span>\n    <span><i class=\"fas fa-map-pin m-1 green-text fa-lg\"></i>Low</span>\n  </div>\n  </div>\n  \n    </ReactMapGL>\n  </div>)\n}","/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/SideBar.js",[],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/utils.js",[],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/SusceptibilityAlert.js",[],"/home/animesh/Documents/PoonamMam/Earthquake_PHD/src/Components/SideBar/InfoTable.js",["48"],"import {useState} from 'react';\r\nimport {Select,MenuItem,TableContainer, TableHead, \r\n    TableBody, TableCell,Table,TableRow, FormControl} from '@material-ui/core'\r\n\r\nexport const InfoTable = ({location,setLocation}) => {\r\n    const handleChange = (event) =>{\r\n        const name = event.target.name;\r\n        setLocation({...location,[name]:event.target.value})\r\n    }\r\n\r\n    // Geomorphology,RochChar,OverburdenThickness,Hydrology,Erosion,Rainfall,Anthropogenic,SlopeType,LandslideMaterial,Movement,Style\r\n    if(location){\r\n    return (\r\n        <TableContainer>\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Parameters</TableCell>\r\n                    <TableCell>Value</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell> Village Name</TableCell>\r\n                    <TableCell> {location?.Vill}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Geomorphology</TableCell>\r\n                    <TableCell>\r\n                        <Select value={location?.Geomorphology} onChange={handleChange} inputProps={{name:'Geomorphology'}}>\r\n                            <MenuItem value=\"AF\">AF</MenuItem>\r\n                            <MenuItem value=\"AFP\">AFP</MenuItem>\r\n                            <MenuItem value=\"CC\">CC</MenuItem>\r\n                            <MenuItem value=\"CFS\">CFS</MenuItem>\r\n                            <MenuItem value=\"DHS\">DHS</MenuItem>\r\n                            <MenuItem value=\"DMD\">DMD</MenuItem>\r\n                            <MenuItem value=\"HDDHS\">HDDHS</MenuItem>\r\n                            <MenuItem value=\"LDDHS\">LDDHS</MenuItem>\r\n                            <MenuItem value=\"MDDHS\">MDDHS</MenuItem>\r\n                            <MenuItem value=\"RBM\">RBM</MenuItem>\r\n                            <MenuItem value=\"Terrace\">Terrace</MenuItem>\r\n                            <MenuItem value=\"TMS\">TMS</MenuItem>\r\n                        </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n        \r\n                <TableRow>\r\n                    <TableCell> RockChar</TableCell>\r\n                    <TableCell>\r\n                        <Select value={location?.RockChar} onChange={handleChange} inputProps={{name:'RockChar'}}>\r\n                            <MenuItem value=\"Sheared\">Sheared</MenuItem>\r\n                            <MenuItem value=\"Massive\">Massive</MenuItem>\r\n                            <MenuItem value=\"Fractured\">Fractured</MenuItem>\r\n                            <MenuItem value=\"Jointed\">Jointed</MenuItem>\r\n                        </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> OverburdenThickness</TableCell>\r\n                    <TableCell> \r\n                        <FormControl>\r\n                            <Select value={location?.OverburdenThickness} onChange={handleChange} inputProps={{name:'OverburdenThickness'}}>\r\n                                <MenuItem value=\"0-1m\">0-1m</MenuItem>\r\n                                <MenuItem value=\"1-2m\">1-2m</MenuItem>\r\n                                <MenuItem value=\"2-5m\">2-5m</MenuItem>\r\n                                <MenuItem value=\">5m\">>5m</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Hydrology</TableCell>\r\n                    <TableCell>\r\n                        <Select value={location?.Hydrology} onChange={handleChange} inputProps={{name:'Hydrology'}}>\r\n                            <MenuItem value=\"Dry\">Dry</MenuItem>\r\n                            <MenuItem value=\"Wet\">Wet</MenuItem>\r\n                            <MenuItem value=\"Damp\">Damp</MenuItem>\r\n                            <MenuItem value=\"Flowing\">Flowing</MenuItem>\r\n                            <MenuItem value=\"Dripping\">Dripping</MenuItem>\r\n                        </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Erosion</TableCell>\r\n                    <TableCell>\r\n                            <Select value={location?.Erosion} onChange={handleChange} inputProps={{name:'Erosion'}}>\r\n                                <MenuItem value=\"yes\">Yes</MenuItem>\r\n                                <MenuItem value=\"no\">No</MenuItem>\r\n                            </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Rainfall</TableCell>\r\n                    <TableCell> \r\n                    <FormControl>\r\n                        <Select value={location?.Rainfall} onChange={handleChange} inputProps={{name:'Rainfall'}}>\r\n                            <MenuItem value=\"yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"no\">No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                  \r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Anthropogenic</TableCell>\r\n                    <TableCell>\r\n                        <Select value={location?.Anthropogenic} onChange={handleChange} inputProps={{name:'Anthropogenic'}}>\r\n                            <MenuItem value=\"yes\">Yes</MenuItem>\r\n                            <MenuItem value=\"no\">No</MenuItem>\r\n                        </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> SlopeType</TableCell>\r\n                    <TableCell>\r\n                    <Select value={location?.SlopeType} onChange={handleChange} inputProps={{name:'SlopeType'}}>\r\n                            <MenuItem value=\"steep\">Steep</MenuItem>\r\n                            <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n                            <MenuItem value=\"gentle\">Gentle</MenuItem>\r\n                        </Select>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> LandslideMaterial</TableCell>\r\n                    <TableCell> \r\n                    <FormControl>\r\n                        <Select value={location?.LandslideMaterial} onChange={handleChange} inputProps={{name:'LandslideMaterial'}}>\r\n                            <MenuItem value=\"Rock\">Rock</MenuItem>\r\n                            <MenuItem value=\"Debris\">Debris</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Movement</TableCell>\r\n                    <TableCell>\r\n                        <Select value={location?.Movement} onChange={handleChange} inputProps={{name:'Movement'}}>\r\n                            <MenuItem value=\"Fall\">Fall</MenuItem>\r\n                            <MenuItem value=\"Slide\">Slide</MenuItem>\r\n                            <MenuItem value=\"Topple\">Topple</MenuItem>\r\n                        </Select></TableCell>\r\n                </TableRow>\r\n           \r\n                <TableRow>\r\n                    <TableCell> Style</TableCell>\r\n                    <TableCell> \r\n                    <FormControl>\r\n                        <Select value={location?.Style} onChange={handleChange} inputProps={{name:'Style'}}>\r\n                            <MenuItem value=\"Single\">Single</MenuItem>\r\n                            <MenuItem value=\"Multi\">Multi</MenuItem>\r\n                            <MenuItem value=\"Complex\">Complex</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n    )\r\n    }else{ return <TableContainer>\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Parameters</TableCell>\r\n                    <TableCell>Value</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell> Village Name</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Geomorphology</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> RockChar</TableCell>\r\n                    <TableCell></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> OverburdenThickness</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Hydrology</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Erosion</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Rainfall</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Anthropogenic</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> SlopeType</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> LandslideMaterial</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Movement</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell> Style</TableCell>\r\n                    <TableCell> </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n    }}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":9,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":2,"column":36,"nodeType":"55","messageId":"56","endLine":2,"endColumn":48},{"ruleId":"53","severity":1,"message":"58","line":2,"column":49,"nodeType":"55","messageId":"56","endLine":2,"endColumn":66},{"ruleId":"53","severity":1,"message":"59","line":2,"column":68,"nodeType":"55","messageId":"56","endLine":2,"endColumn":79},{"ruleId":"53","severity":1,"message":"60","line":1,"column":9,"nodeType":"55","messageId":"56","endLine":1,"endColumn":17},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ScaleControl' is defined but never used.","'NavigationControl' is defined but never used.","'BaseControl' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]